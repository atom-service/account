syntax = "proto3";

package standard;

// 状态
enum State {
  UNKNOWN = 0 ;   // 未知
  SUCCESS = 1 ;   // 成功
  FAILURE = 2 ;   // 失败
  SERVICE_ERROR = 3 ;   // 服务错误
  PARAMS_INVALID = 4 ;   // 参数不合法
  ILLEGAL_REQUEST = 5 ;   // 非法请求
  LABEL_NOT_EXIST = 6 ;   // 标签不存在
  GROUP_NOT_EXIST = 7 ;   // 分组不存在
  USER_NOT_EXIST = 8 ;   // 用户不存在
  USER_ALREADY_EXISTS = 9 ;   // 用户已经存在
  USER_VERIFY_FAILURE = 10 ;   // 用户验证失败
  LABEL_ALREADY_EXISTS = 11 ;   // 标签已经存在
  DB_OPERATION_FATLURE = 12 ;    // 数据库操作失败
}


// Group 组
message Group {
  uint64 ID = 1 ;
  string Name = 2 ;
	string Class = 3 ;
  string State = 4 ;
  string Description = 5 ;
  string CreatedTime = 6 ;
  string UpdatedTime = 7 ;
  string DeletedTime = 8 ;
}

// Label 标签
message Label {
	uint64 ID = 1 ;
	string Class = 2 ;
	string State = 3 ;
  string Value = 4 ;
  string CreatedTime = 6 ;
  string UpdatedTime = 7 ;
  string DeletedTime = 8 ;
}

// User 用户
message User {
  uint64 ID = 1 ;
  string Class = 2 ;
  string Avatar = 3 ;
  uint64 Inviter = 4 ;
	string Nickname = 5 ;
	string Username = 6 ;
  string Password = 7 ;
  string CreatedTime = 8 ;
  string UpdatedTime = 9 ;
  string DeletedTime = 10 ;
}

message CreateUserRequest {
  string Class = 1 ;
  uint64 Inviter = 3 ;
	string Nickname = 4 ;
	string Username = 5 ;
  string Password = 6 ;
}

message CreateUserResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message QueryUserByIDRequest {
  uint64 ID = 1 ;
}

message QueryUserByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
  User   Data = 3 ;
}

message QueryUserByUsernameRequest{
  string Username = 1 ;
}

message QueryUserByUsernameResponse{
  State  State = 1 ;
  string Message = 2 ;
  User   Data = 3 ;
}

message DeleteUserByIDRequest {
  uint64 ID = 1 ;
}

message DeleteUserByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message UpdateUserPasswordByIDRequest {
  uint64 ID = 1 ;
  string Password = 2 ;
}

message UpdateUserPasswordByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message VerifyUserPasswordByIDRequest {
  uint64 ID = 1 ;
  string Password = 2 ;
}

message VerifyUserPasswordByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message VerifyUserPasswordByUsernameRequest {
  string Username = 1 ;
  string Password = 2 ;
}

message VerifyUserPasswordByUsernameResponse {
  State  State = 1 ;
  string Message = 2 ;
}

// 标签操作
message CreateLabelRequest {
	string Class = 1 ;
	string State = 2 ;
  string Value = 3 ;
}

message CreateLabelResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message QueryLabelByIDRequest {
  uint64 ID = 1 ;
}

message QueryLabelByIDResponse {
  State State = 1 ; // 状态
  string Message = 2 ;
  Label Data = 3 ;
}

message UpdateLabelClassByIDRequest {
  uint64 ID = 1 ;
	string Class = 2 ;
}

message UpdateLabelClassByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message UpdateLabelStateByIDRequest {
  uint64 ID = 1 ;
  string State = 2 ;
}

message UpdateLabelStateByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message UpdateLabelValueByIDRequest {
  uint64 ID = 1 ;
  string Value = 2 ;
}

message UpdateLabelValueByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message DeleteLabelByIDRequest {
  uint64 ID = 1 ;
}

message DeleteLabelByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message AddLabelToUserByIDRequest {
  uint64 ID = 1 ;
  uint64 UserID = 2 ; // 添加标签给用户 谓语是用户
}

message AddLabelToUserByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message RemoveLabelFromUserByIDRequest {
  uint64 ID = 1 ;
  uint64 LabelID = 2 ; // 从用户身上撕下标签 所以谓语是标签
}

message RemoveLabelFromUserByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

// 组操作

message CreateGroupRequest {
  string Name = 1 ;
	string Class = 2 ;
  string State = 3 ;
  string Description = 4 ;
}

message CreateGroupResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message QueryGroupByIDRequest {
  uint64 ID = 1 ;
}

message QueryGroupByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
  Group  Data = 3 ;
}

message UpdateGroupNameByIDRequest {
  uint64 ID = 1 ;
  string Name = 2 ;
}

message UpdateGroupNameByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message UpdateGroupClassByIDRequest {
  uint64 ID = 1 ;
	string Class = 2 ;
}

message UpdateGroupClassByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message UpdateGroupStateByIDRequest {
  uint64 ID = 1 ;
  string State = 2 ;
}

message UpdateGroupStateByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message UpdateGroupDescriptionByIDRequest {
  uint64 ID = 1 ;
  string Description = 2 ;
}

message UpdateGroupDescriptionByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message DeleteGroupByIDRequest {
  uint64 ID = 1 ;
}

message DeleteGroupByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message AddUserToGroupByIDRequest {
  uint64 ID = 1 ;
  uint64 GroupID = 2 ; // 添加用户到组 组是谓语
}

message AddUserToGroupByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

message RemoveUserFromGroupByIDRequest {
  uint64 ID = 1 ;
  uint64 UserID = 2 ; // 从组里移除用户 用户是谓语
}

message RemoveUserFromGroupByIDResponse {
  State  State = 1 ;
  string Message = 2 ;
}

service Account {
  // 用户操作
  rpc CreateUser(CreateUserRequest)returns(CreateUserResponse){} // 创建一个用户
  rpc QueryUserByID(QueryUserByIDRequest)returns(QueryUserByIDResponse){} // 通过 ID 查询
  rpc DeleteUserByID(DeleteUserByIDRequest)returns(DeleteUserByIDResponse){} // 删除用户
  rpc QueryUserByUsername(QueryUserByUsernameRequest)returns(QueryUserByUsernameResponse){} // 通过 用户名 查询
  rpc UpdateUserPasswordByID(UpdateUserPasswordByIDRequest)returns(UpdateUserPasswordByIDResponse){} // 更新用户密码
  rpc VerifyUserPasswordByID(VerifyUserPasswordByIDRequest)returns(VerifyUserPasswordByIDResponse){} // 验证密码
  rpc VerifyUserPasswordByUsername(VerifyUserPasswordByUsernameRequest)returns(VerifyUserPasswordByUsernameResponse){} // 验证密码

  // 标签操作
  rpc CreateLabel(CreateLabelRequest)returns(CreateLabelResponse){} // 根据 ID 查询标签
  rpc QueryLabelByID(QueryLabelByIDRequest)returns(QueryLabelByIDResponse){} // 根据 ID 查询标签
  rpc DeleteLabelByID(DeleteLabelByIDRequest)returns(DeleteLabelByIDResponse){} // 根据 ID 删除标签
  rpc UpdateLabelClassByID(UpdateLabelClassByIDRequest)returns(UpdateLabelClassByIDResponse){} // 根据 ID 更新标签类别
  rpc UpdateLabelStateByID(UpdateLabelStateByIDRequest)returns(UpdateLabelStateByIDResponse){} // 根据 ID 更新标签状态
  rpc UpdateLabelValueByID(UpdateLabelValueByIDRequest)returns(UpdateLabelValueByIDResponse){} // 根据 ID 更新标签值

  // 标签关系操作
  rpc AddLabelToUserByID(AddLabelToUserByIDRequest)returns(AddLabelToUserByIDResponse){} // 根据 ID 给指定用户添加标签
  rpc RemoveLabelFromUserByID(RemoveLabelFromUserByIDRequest)returns(RemoveLabelFromUserByIDResponse){} // 通过 ID 从指定 ID 用户身上移除标签

  // 组操作
  rpc CreateGroup(CreateGroupRequest)returns(CreateGroupResponse){} // 根据 ID 查询组
  rpc QueryGroupByID(QueryGroupByIDRequest)returns(QueryGroupByIDResponse){} // 根据 ID 查询组
  rpc DeleteGroupByID(DeleteGroupByIDRequest)returns(DeleteGroupByIDResponse){} // 根据 ID 删除组
  rpc UpdateGroupNameByID(UpdateGroupNameByIDRequest)returns(UpdateGroupNameByIDResponse){} // 根据 ID 更新组
  rpc UpdateGroupClassByID(UpdateGroupClassByIDRequest)returns(UpdateGroupClassByIDResponse){} // 根据 ID 更新组
  rpc UpdateGroupStateByID(UpdateGroupStateByIDRequest)returns(UpdateGroupStateByIDResponse){} // 根据 ID 更新组
  rpc UpdateGroupDescriptionByID(UpdateGroupDescriptionByIDRequest)returns(UpdateGroupDescriptionByIDResponse){} // 根据 ID 更新组

  // 组关系操作
  rpc AddUserToGroupByID(AddUserToGroupByIDRequest)returns(AddUserToGroupByIDResponse){} //添加 ID 指定的用户加入  ID 指定的组
  rpc RemoveUserFromGroupByID(RemoveUserFromGroupByIDRequest)returns(RemoveUserFromGroupByIDResponse){} // 从指定 ID 的组里移除指定 ID 的用户
}
