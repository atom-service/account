syntax = "proto3";

package standard;

// Label 标签
message Label {
	uint64 ID          = 1 ;
	string Type        = 2 ;
	string State       = 3 ;
  string Value       = 4 ;
  uint64 Owner       = 5 ;
  string CreateTime  = 6 ;
  string UpdateTime  = 7 ;
}

// User 用户
message User {
  uint64 ID             = 1 ;
  string Type           = 2 ;
  string Avatar         = 3 ;
  uint64 Inviter        = 4 ;
	string Nickname       = 5 ;
	string Username       = 6 ;
  string Password       = 7 ;
  string CreateTime     = 8 ;
  string UpdateTime     = 9 ;
}

// User 用户
message Group {
  uint64 ID             = 1 ;
  string Type           = 2 ;
  string Name           = 3 ;
  string CreateTime     = 4 ;
  string UpdateTime     = 5 ;
  string Description    = 6 ;
}


message CreateUserRequest {
  string Type           = 1 ;
  string Avatar         = 2 ;
  uint64 Inviter        = 3 ;
	string Nickname       = 4 ;
	string Username       = 5 ;
  string Password       = 6 ;
}

message CreateUserResponse {
  uint64 State   = 1 ;
  string Message = 2 ;
}

message QueryUserByIDRequest {
  uint64 ID      = 1 ;
}

message QueryUserByIDResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
  User   Data    = 3 ;
}
message UpdateUserByIDRequest {
  uint64 ID      = 1 ;
  User   Data    = 2 ;
}

message QueryUserByUsernameRequest{
  string Username = 3 ;
}

message QueryUserByUsernameResponse{
  uint64  State   = 1 ;
  string Message = 2 ;
  User   Data    = 3 ;
}

message UpdateUserByIDResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
}

message DeleteUserByIDRequest {
  uint64 ID      = 1 ;
}

message DeleteUserByIDResponse {
  uint64  State    = 1 ;
  string Message  = 2 ;
}

message UpdateUserPasswordByIDRequest {
  uint64 ID         = 1 ;
  string Password   = 2 ;
}

message UpdateUserPasswordByIDResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
}

message VerifyUserPasswordByIDRequest {
  uint64 ID         = 1 ;
  string Password   = 2 ;
}

message VerifyUserPasswordByIDResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
  bool   Data    = 3 ;
}

message VerifyUserPasswordByUsernameRequest {
  string Username   = 1 ;
  string Password   = 2 ;
}

message VerifyUserPasswordByUsernameResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
  bool   Data   = 3 ;
}

message CreateLabelByOwnerRequest {
  uint64 Owner       = 1 ;
  Label  Label       = 2 ;
}

message CreateLabelByOwnerResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
}

message QueryLabelByIDRequest {
  uint64 ID       = 1 ;
}

message QueryLabelByIDResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
  Label  Data    = 3 ;
}

message UpdateLabelByIDRequest {
  uint64 ID      = 1 ;
  Label  Data    = 3 ;
}

message UpdateLabelByIDResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
}

message DeleteLabelByIDRequest {
  uint64 ID      = 1 ;
}

message DeleteLabelByIDResponse {
  uint64  State   = 1 ;
  string Message = 2 ;
}

message QueryLabelByOwnerRequest {
  uint64 Owner   = 1 ;
  uint64 Limit = 2 ;
  uint64 Offset = 3 ;
}

message QueryLabelByOwnerResponse {
  uint64 State          = 1 ;
  string Message        = 2 ;
  uint64 Total = 3 ;
  repeated Label Data   = 4 ;
}

service Account {

  // 用户操作
  rpc CreateUser(CreateUserRequest)returns(CreateUserResponse){} // 创建一个用户
  rpc QueryUserByID(QueryUserByIDRequest)returns(QueryUserByIDResponse){} // 通过 ID 查询
  rpc UpdateUserByID(UpdateUserByIDRequest)returns(UpdateUserByIDResponse){} // 更新用户
  rpc DeleteUserByID(DeleteUserByIDRequest)returns(DeleteUserByIDResponse){} // 删除用户
  rpc QueryUserByUsername(QueryUserByUsernameRequest)returns(QueryUserByUsernameResponse){} // 通过 用户名 查询
  rpc UpdateUserPasswordByID(UpdateUserPasswordByIDRequest)returns(UpdateUserPasswordByIDResponse){} // 更新用户密码
  rpc VerifyUserPasswordByID(VerifyUserPasswordByIDRequest)returns(VerifyUserPasswordByIDResponse){} // 验证密码
  rpc VerifyUserPasswordByUsername(VerifyUserPasswordByUsernameRequest)returns(VerifyUserPasswordByUsernameResponse){} // 验证密码

  // 标签操作
  rpc QueryLabelByID(QueryLabelByIDRequest)returns(QueryLabelByIDResponse){} // 根据 ID 查询标签
  rpc UpdateLabelByID(UpdateLabelByIDRequest)returns(UpdateLabelByIDResponse){} // 根据 ID  更新标签
  rpc DeleteLabelByID(DeleteLabelByIDRequest)returns(DeleteLabelByIDResponse){} //根据 ID  删除标签
  rpc QueryLabelByOwner(QueryLabelByOwnerRequest)returns(QueryLabelByOwnerResponse){} // 查询指定用户的所有标签
  rpc CreateLabelByOwner(CreateLabelByOwnerRequest)returns(CreateLabelByOwnerResponse){} // 创建一个标签给指定用户
}
